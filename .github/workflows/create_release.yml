name: Create Release

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    tags:
      - "*"
  pull_request:
    tags:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build
      run: dotnet build -c Release

    - name: Create NuGet
      run: dotnet pack -c Release -o ${{ github.workspace }}/nuget

   # Publish the NuGet package as an artifact, so they can be used in the following jobs
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ github.workspace }}/nuget/*.nupkg
        
  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ github.workspace }}/nuget

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      # Validate metadata and content of the NuGet package
      # https://www.nuget.org/packages/Meziantou.Framework.NuGetPackageValidation.Tool#readme-body-tab
      # If some rules are not applicable, you can disable them
      # using the --excluded-rules or --excluded-rule-ids option
      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ github.workspace }}/nuget/*.nupkg")

  run_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Run tests
      run: dotnet test -c Release

  deploy:
    runs-on: ubuntu-latest
    needs: [ validate_nuget, run_test ]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ github.workspace }}/nuget

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.CSHARPKINDSORTER_PUBLISH }}
      
      # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4

      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
    - name: Publish NuGet package
      run: |
        foreach($file in (Get-ChildItem "${{ github.workspace }}/nuget" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_PACKAGE_TOKEN }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
  